# filepath: c:\Noah_Kirsch\01_stuff\WNR\WNR\server1\docker-compose.yaml
version: '3'

networks:
  cluster1:
    driver: bridge

  app-network:
    driver: bridge

services:
  proxy:
    image: neo4j:4.4-enterprise
    hostname: proxy
    container_name: proxy
    ports:
      # Map proxy ports to the specific server IP
      - "${SERVER1_IP}:${PROXY_HTTP_PORT}:7474"
      - "${SERVER1_IP}:${PROXY_BOLT_PORT}:7687"
    environment:
      NEO4J_AUTH: ${NEO4J_AUTH}
      NEO4J_ACCEPT_LICENSE_AGREEMENT: "yes"
      NEO4J_fabric_database_name: fabric

      # Fabric URIs now point to the PUBLIC IPs and MAPPED Bolt ports of the cores
      NEO4J_fabric_graph_0_name: dbshard1
      NEO4J_fabric_graph_0_uri: neo4j://${SERVER1_IP}:${S1_CORE1_BOLT_PORT},neo4j://${SERVER1_IP}:${S1_CORE2_BOLT_PORT},neo4j://${SERVER1_IP}:${S1_CORE3_BOLT_PORT}

      NEO4J_fabric_graph_1_name: dbshard2
      NEO4J_fabric_graph_1_uri: neo4j://${SERVER2_IP}:${S2_CORE1_BOLT_PORT},neo4j://${SERVER2_IP}:${S2_CORE2_BOLT_PORT},neo4j://${SERVER2_IP}:${S2_CORE3_BOLT_PORT}

      NEO4J_fabric_graph_2_name: dbshard3
      NEO4J_fabric_graph_2_uri: neo4j://${SERVER3_IP}:${S3_CORE1_BOLT_PORT},neo4j://${SERVER3_IP}:${S3_CORE2_BOLT_PORT},neo4j://${SERVER3_IP}:${S3_CORE3_BOLT_PORT}

      NEO4JLABS_PLUGINS: '["apoc"]'
      NEO4J_dbms_security_procedures_unrestricted: apoc.*
      NEO4J_dbms_security_procedures_allowlist: apoc.*
      NEO4J_dbms_memory_heap_max__size: ${NEO4J_MAX_HEAP_SIZE:-1G}
    # Proxy doesn't need to be in the cluster1 network directly if using public IPs
    # networks:
    #    - cluster1 # Optional, might help if some internal comms are desired, but public IPs are primary

    # --- Shard 1 Cores ---
  db-shard-1-core-1:
    image: neo4j:4.4-enterprise
    hostname: "db-shard-1-core-1" # Internal hostname
    container_name: db-shard-1-core-1
    ports:
      # Map all required ports to the specific server IP
      - "${SERVER1_IP}:${S1_CORE1_HTTP_PORT}:7474"
      - "${SERVER1_IP}:${S1_CORE1_BOLT_PORT}:7687"
      - "${SERVER1_IP}:${S1_CORE1_DISCOVERY_PORT}:5000"
      - "${SERVER1_IP}:${S1_CORE1_TRANSACTION_PORT}:6000"
      - "${SERVER1_IP}:${S1_CORE1_RAFT_PORT}:7000"
    environment:
      NEO4J_AUTH: ${NEO4J_AUTH}
      NEO4J_ACCEPT_LICENSE_AGREEMENT: "yes"
      NEO4J_dbms_mode: CORE
      # Discovery members use PUBLIC IPs and MAPPED discovery ports
      NEO4J_causal__clustering_initial__discovery__members: "${SERVER1_IP}:${S1_CORE1_DISCOVERY_PORT},${SERVER1_IP}:${S1_CORE2_DISCOVERY_PORT},${SERVER1_IP}:${S1_CORE3_DISCOVERY_PORT}"
      NEO4J_causal__clustering_expected__core__cluster__size: "3"
      # Advertised addresses use PUBLIC IPs and MAPPED ports
      NEO4J_dbms_connector_bolt_advertised__address: "${SERVER1_IP}:${S1_CORE1_BOLT_PORT}"
      NEO4J_causal_clustering_discovery_advertised_address: "${SERVER1_IP}:${S1_CORE1_DISCOVERY_PORT}"
      NEO4J_causal_clustering_transaction_advertised_address: "${SERVER1_IP}:${S1_CORE1_TRANSACTION_PORT}"
      NEO4J_causal_clustering_raft_advertised_address: "${SERVER1_IP}:${S1_CORE1_RAFT_PORT}"
      # Optional: Listen address can be 0.0.0.0 or specific internal IP if needed
      # NEO4J_dbms_connector_bolt_listen_address: "0.0.0.0:7687"
      # NEO4J_causal_clustering_discovery_listen_address: "0.0.0.0:5000"
      # NEO4J_causal_clustering_transaction_listen_address: "0.0.0.0:6000"
      # NEO4J_causal_clustering_raft_listen_address: "0.0.0.0:7000"
      NEO4JLABS_PLUGINS: '["apoc"]'
      NEO4J_dbms_security_procedures_unrestricted: apoc.*
      NEO4J_dbms_security_procedures_allowlist: apoc.*
      NEO4J_dbms_memory_heap_max__size: ${NEO4J_MAX_HEAP_SIZE:-1G}
    volumes:
      - "./cypher:/cypher" # Adjust path if needed relative to this compose file
    networks:
      - cluster1

  db-shard-1-core-2:
    image: neo4j:4.4-enterprise
    hostname: "db-shard-1-core-2"
    container_name: db-shard-1-core-2
    ports:
      - "${SERVER1_IP}:${S1_CORE2_HTTP_PORT}:7474"
      - "${SERVER1_IP}:${S1_CORE2_BOLT_PORT}:7687"
      - "${SERVER1_IP}:${S1_CORE2_DISCOVERY_PORT}:5000"
      - "${SERVER1_IP}:${S1_CORE2_TRANSACTION_PORT}:6000"
      - "${SERVER1_IP}:${S1_CORE2_RAFT_PORT}:7000"
    environment:
      NEO4J_AUTH: ${NEO4J_AUTH}
      NEO4J_ACCEPT_LICENSE_AGREEMENT: "yes"
      NEO4J_dbms_mode: CORE
      NEO4J_causal__clustering_initial__discovery__members: "${SERVER1_IP}:${S1_CORE1_DISCOVERY_PORT},${SERVER1_IP}:${S1_CORE2_DISCOVERY_PORT},${SERVER1_IP}:${S1_CORE3_DISCOVERY_PORT}"
      NEO4J_causal__clustering_expected__core__cluster__size: "3"
      NEO4J_dbms_connector_bolt_advertised__address: "${SERVER1_IP}:${S1_CORE2_BOLT_PORT}"
      NEO4J_causal_clustering_discovery_advertised_address: "${SERVER1_IP}:${S1_CORE2_DISCOVERY_PORT}"
      NEO4J_causal_clustering_transaction_advertised_address: "${SERVER1_IP}:${S1_CORE2_TRANSACTION_PORT}"
      NEO4J_causal_clustering_raft_advertised_address: "${SERVER1_IP}:${S1_CORE2_RAFT_PORT}"
      NEO4JLABS_PLUGINS: '["apoc"]'
      NEO4J_dbms_security_procedures_unrestricted: apoc.*
      NEO4J_dbms_security_procedures_allowlist: apoc.*
      NEO4J_dbms_memory_heap_max__size: ${NEO4J_MAX_HEAP_SIZE:-1G}
    volumes:
      - "./cypher:/cypher"
    networks:
      - cluster1

  db-shard-1-core-3:
    image: neo4j:4.4-enterprise
    hostname: "db-shard-1-core-3"
    container_name: db-shard-1-core-3
    ports:
      - "${SERVER1_IP}:${S1_CORE3_HTTP_PORT}:7474"
      - "${SERVER1_IP}:${S1_CORE3_BOLT_PORT}:7687"
      - "${SERVER1_IP}:${S1_CORE3_DISCOVERY_PORT}:5000"
      - "${SERVER1_IP}:${S1_CORE3_TRANSACTION_PORT}:6000"
      - "${SERVER1_IP}:${S1_CORE3_RAFT_PORT}:7000"
    environment:
      NEO4J_AUTH: ${NEO4J_AUTH}
      NEO4J_ACCEPT_LICENSE_AGREEMENT: "yes"
      NEO4J_dbms_mode: CORE
      NEO4J_causal__clustering_initial__discovery__members: "${SERVER1_IP}:${S1_CORE1_DISCOVERY_PORT},${SERVER1_IP}:${S1_CORE2_DISCOVERY_PORT},${SERVER1_IP}:${S1_CORE3_DISCOVERY_PORT}"
      NEO4J_causal__clustering_expected__core__cluster__size: "3"
      NEO4J_dbms_connector_bolt_advertised__address: "${SERVER1_IP}:${S1_CORE3_BOLT_PORT}"
      NEO4J_causal_clustering_discovery_advertised_address: "${SERVER1_IP}:${S1_CORE3_DISCOVERY_PORT}"
      NEO4J_causal_clustering_transaction_advertised_address: "${SERVER1_IP}:${S1_CORE3_TRANSACTION_PORT}"
      NEO4J_causal_clustering_raft_advertised_address: "${SERVER1_IP}:${S1_CORE3_RAFT_PORT}"
      NEO4JLABS_PLUGINS: '["apoc"]'
      NEO4J_dbms_security_procedures_unrestricted: apoc.*
      NEO4J_dbms_security_procedures_allowlist: apoc.*
      NEO4J_dbms_memory_heap_max__size: ${NEO4J_MAX_HEAP_SIZE:-1G}
    volumes:
      - "./cypher:/cypher"
    networks:
      - cluster1

  mqtt-broker:
    image: eclipse-mosquitto:2.0.15
    container_name: mosquitto-broker
    restart: unless-stopped
    ports:
      # Map to a specific IP if needed, or all interfaces
      - "1883:1883"
      - "9001:9001"
    volumes:
      # Adjust paths relative to this compose file
      - ./config:/mosquitto/config
      - ./data:/mosquitto/data
      - ./log:/mosquitto/log
    environment:
      - INITIAL_USER=admin
      - INITIAL_PASSWORD=admin
    entrypoint: |
      sh -c 'chown mosquitto:mosquitto /mosquitto/config/pwfile;
      if [ ! -s /mosquitto/config/pwfile ]; then
        mosquitto_passwd -b -c /mosquitto/config/pwfile $${INITIAL_USER} $${INITIAL_PASSWORD};
      fi;
      exec /docker-entrypoint.sh mosquitto -c /mosquitto/config/mosquitto.conf'
    networks:
      - app-network
